Build real time Gaming leaderboard

Task 1:

- Ir al servicio "Kinesis" y copiar el nombre de unico data sream que haya.
- Ir al servicio "Elasticache" y copiar el endpoint de configuración del unico "REdis OSS Cache" (panel izquierdo) que haya (el formato es algo como clustercfg.lar5n9u5kqy3ut9.0gil8k.euw2.cache.amazonaws.com:6379)
- Pegar los dos en la solución separados con una coma MAL PUESTA (Ej: x,x)

Task 2 (Respuesta rápida: 18)

SI LA RESPUESTA RÁPIDA NO FUNCIONA PRUEBA:

- Busca el servicio Apache FLink
- Abre la sección StudioNotebook y el único que haya (se llama application creo)
- Dentro dale a Open in Apache Zeppelin (arriba derecha)
- DAle a create new note y pon el nombre que te rote
- Pega esto (cambiando la región por la tuya y el nombre del stream por el tuyo que has puesto antes):

%flink.ssql
CREATE TABLE `player_data` (
    `player_id` STRING,
    `speed` BIGINT,
    `distance` BIGINT,
    `event_time` TIMESTAMP(3),
     WATERMARK FOR event_time AS event_time - INTERVAL '5' SECOND -- watermark for late arrival handling
)
WITH (
    'connector' = 'kinesis', -- connect to the kinesis stream
    'stream' = '[Enter stream name here]', -- example: my-kinesis-stream
    'aws.region' = '[Enter AWS region name here]', -- example: eu-west-1
    'scan.stream.initpos' = 'TRIM_HORIZON', -- read from the very beginning of the stream
    'format' = 'json' -- source data in json format
);

-  Dale a Run y pondra algo de tabla creada
- Ahora dale "+ Add Paragraph" (es una opción que solo sale cuando haces pasas el raton por encima, debajo de los resultados de la creación de la table debajo del códdigo) y metele la siguiente query (no me funciona con el COUNT):

SELECT DISTINCT player_id FROM player_data;

- Y escribe como respuesta el número de jugadores que salgan

Task 3:

- Crea un nuevo notebook en Apache Zeppelin como antes.
- Metele (poniendo tu :

%flink.ssql
CREATE TABLE `total_distance` (
  `zset_key` STRING, -- Key of ZSET must be hardcoded to 'leaderboard:total_distance'
  `total_distance` BIGINT, -- Value
  `player_id` STRING -- Key
)
WITH (
 'connector' = 'redis', -- connect to redis database, Elasticache
 'redis-mode' = 'cluster', -- connect using cluster mode
 'command' = 'zincrby', -- Use redis operation ZINCRBY for all queries
 'cluster-nodes' = '[elasticache-redis-host:port]' -- example: my-elasticache-redis-host:6379
);

- Ahoira les das de nuevo "+ add paragraph" y le metes esto:

%flink.ssql(type=update)
INSERT INTO total_distance SELECT 'leaderboard:total_distance' as zset_key, SUM(distance), player_id
FROM TABLE(
        TUMBLE(TABLE `player_data`, DESCRIPTOR(event_time), INTERVAL '30' SECOND))
GROUP BY window_start, window_end, player_id

- Y rezas para que valide